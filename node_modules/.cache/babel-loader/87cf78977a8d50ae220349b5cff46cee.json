{"ast":null,"code":"var _jsxFileName = \"/Users/fanlane/code/project3-frontend/src/components/fileUploader/index.js\",\n    _s = $RefreshSig$();\n\nimport { Button, Box } from \"@material-ui/core\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport { useEffect, useState } from \"react\";\nimport styles from \"./styles.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst FileUploader = ({\n  onFilesChange,\n  multiple = false,\n  showImages = true\n}) => {\n  _s();\n\n  const [files, setFiles] = useState([]);\n  const [filesSrc, setFilesSrc] = useState([]);\n  const fileInputId = \"fileinput\" + Math.ceil(Math.random() * 10000);\n\n  const handleSelectFile = e => {\n    const newFiles = [...e.target.files].map(file => {\n      const fileID = Math.ceil(Date.now() + Math.random() * 10000);\n      return {\n        id: fileID,\n        file\n      };\n    });\n    const filesData = multiple ? [...files, ...newFiles] : [...newFiles];\n    setFiles(filesData);\n  };\n\n  const handleClickDelete = fileID => {\n    setFiles(files.filter(file => {\n      return file.id !== fileID;\n    }));\n  };\n\n  const renderImages = () => {\n    return filesSrc.map(image => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.imageBox,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          alt: \"\",\n          src: image.src\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.deleteIcon,\n          onClick: () => handleClickDelete(image.id),\n          children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)]\n      }, image.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this);\n    });\n  };\n\n  useEffect(() => {\n    if (onFilesChange instanceof Function) {\n      onFilesChange(files);\n    }\n\n    let images = [];\n\n    if (files.length === 0) {\n      setFilesSrc(images);\n    }\n\n    files.forEach(file => {\n      const reader = new FileReader();\n\n      reader.onload = function (e) {\n        images.push({\n          id: file.id,\n          src: e.target.result\n        });\n\n        if (images.length === files.length) {\n          setFilesSrc(images);\n        }\n      };\n\n      reader.readAsDataURL(file.file);\n    }); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [files]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.wrapper,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: fileInputId,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: handleSelectFile,\n        multiple: multiple,\n        accept: \"image/*\",\n        className: styles.fileInput,\n        id: fileInputId,\n        type: \"file\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        component: \"span\",\n        children: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), showImages && /*#__PURE__*/_jsxDEV(Box, {\n      width: \"100%\",\n      display: \"flex\",\n      flexWrap: \"wrap\",\n      children: renderImages()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n\n_s(FileUploader, \"qaE0AZQyJ3/VKU5iZfs3vOgYpTU=\");\n\n_c = FileUploader;\nexport default FileUploader;\n\nvar _c;\n\n$RefreshReg$(_c, \"FileUploader\");","map":{"version":3,"sources":["/Users/fanlane/code/project3-frontend/src/components/fileUploader/index.js"],"names":["Button","Box","DeleteIcon","useEffect","useState","styles","FileUploader","onFilesChange","multiple","showImages","files","setFiles","filesSrc","setFilesSrc","fileInputId","Math","ceil","random","handleSelectFile","e","newFiles","target","map","file","fileID","Date","now","id","filesData","handleClickDelete","filter","renderImages","image","imageBox","src","deleteIcon","Function","images","length","forEach","reader","FileReader","onload","push","result","readAsDataURL","wrapper","fileInput"],"mappings":"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","sourcesContent":["import { Button, Box } from \"@material-ui/core\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nimport styles from \"./styles.module.css\";\r\n\r\nconst FileUploader = ({\r\n  onFilesChange,\r\n  multiple = false,\r\n  showImages = true,\r\n}) => {\r\n  const [files, setFiles] = useState([]);\r\n  const [filesSrc, setFilesSrc] = useState([]);\r\n  const fileInputId = \"fileinput\" + Math.ceil(Math.random() * 10000);\r\n\r\n  const handleSelectFile = (e) => {\r\n    const newFiles = [...e.target.files].map((file) => {\r\n      const fileID = Math.ceil(Date.now() + Math.random() * 10000);\r\n      return {\r\n        id: fileID,\r\n        file,\r\n      };\r\n    });\r\n    const filesData = multiple ? [...files, ...newFiles] : [...newFiles];\r\n    setFiles(filesData);\r\n  };\r\n\r\n  const handleClickDelete = (fileID) => {\r\n    setFiles(\r\n      files.filter((file) => {\r\n        return file.id !== fileID;\r\n      })\r\n    );\r\n  };\r\n\r\n  const renderImages = () => {\r\n    return filesSrc.map((image) => {\r\n      return (\r\n        <div className={styles.imageBox} key={image.id}>\r\n          <img alt=\"\" src={image.src} />\r\n          <div\r\n            className={styles.deleteIcon}\r\n            onClick={() => handleClickDelete(image.id)}\r\n          >\r\n            <DeleteIcon />\r\n          </div>\r\n        </div>\r\n      );\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (onFilesChange instanceof Function) {\r\n      onFilesChange(files);\r\n    }\r\n    let images = [];\r\n    if (files.length === 0) {\r\n      setFilesSrc(images);\r\n    }\r\n    files.forEach((file) => {\r\n      const reader = new FileReader();\r\n      reader.onload = function (e) {\r\n        images.push({\r\n          id: file.id,\r\n          src: e.target.result,\r\n        });\r\n        if (images.length === files.length) {\r\n          setFilesSrc(images);\r\n        }\r\n      };\r\n      reader.readAsDataURL(file.file);\r\n    });\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [files]);\r\n\r\n  return (\r\n    <div className={styles.wrapper}>\r\n      <label htmlFor={fileInputId}>\r\n        <input\r\n          onChange={handleSelectFile}\r\n          multiple={multiple}\r\n          accept=\"image/*\"\r\n          className={styles.fileInput}\r\n          id={fileInputId}\r\n          type=\"file\"\r\n        />\r\n\r\n        <Button variant=\"outlined\" component=\"span\">\r\n          Upload\r\n        </Button>\r\n      </label>\r\n      {showImages && (\r\n        <Box width=\"100%\" display=\"flex\" flexWrap=\"wrap\">\r\n          {renderImages()}\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FileUploader;\r\n"]},"metadata":{},"sourceType":"module"}