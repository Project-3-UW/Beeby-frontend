{"ast":null,"code":"export const getLocation = () => {\n  return new Promise((resolve, reject) => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(position => {\n        resolve([position.coords.latitude, position.coords.longitude]);\n      });\n    } else {\n      reject(\"Geolocation is not supported by this browser.\");\n    }\n  });\n};","map":{"version":3,"sources":["/Users/fanlane/code/project3-frontend/src/utils/location.js"],"names":["getLocation","Promise","resolve","reject","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude"],"mappings":"AAAA,OAAO,MAAMA,WAAW,GAAG,MAAM;AAC/B,SAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtC,QAAIC,SAAS,CAACC,WAAd,EAA2B;AACzBD,MAAAA,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAA0CC,QAAD,IAAc;AACrDL,QAAAA,OAAO,CAAC,CAACK,QAAQ,CAACC,MAAT,CAAgBC,QAAjB,EAA2BF,QAAQ,CAACC,MAAT,CAAgBE,SAA3C,CAAD,CAAP;AACD,OAFD;AAGD,KAJD,MAIO;AACLP,MAAAA,MAAM,CAAC,+CAAD,CAAN;AACD;AACF,GARM,CAAP;AASD,CAVM","sourcesContent":["export const getLocation = () => {\r\n  return new Promise((resolve, reject) => {\r\n    if (navigator.geolocation) {\r\n      navigator.geolocation.getCurrentPosition((position) => {\r\n        resolve([position.coords.latitude, position.coords.longitude]);\r\n      });\r\n    } else {\r\n      reject(\"Geolocation is not supported by this browser.\");\r\n    }\r\n  });\r\n};\r\n"]},"metadata":{},"sourceType":"module"}